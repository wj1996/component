<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--生产者-->
    <bean id="producerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="10.0.0.151:9092,10.0.0.172:9092,10.0.0.173:9092" />
                <entry key="client.id" value="s-k" />
                <entry key="acks" value="-1" />
                <entry key="key.serializer" value="org.apache.kafka.common.serialization.IntegerSerializer" />
                <entry key="value.serializer" value="org.apache.kafka.common.serialization.StringSerializer" />
            </map>
        </constructor-arg>
    </bean>
    <bean id="producerFactory" class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg ref="producerProperties" />
    </bean>
    <bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="producerFactory" />
        <constructor-arg name="autoFlush" value="true" />
    </bean>

    <bean id="kafkaDemo" class="com.wj.spring.kafka.KafkaDemo" />
    <!--消费者-->
    <bean id="consumerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="10.0.0.151:9092,10.0.0.172:9092,10.0.0.173:9092" />
                <entry key="group.id" value="s-k_group" />
                <entry key="enable.auto.commit" value="true" />
                <entry key="auto.offset.reset" value="earliest" />
                <entry key="key.deserializer" value="org.apache.kafka.common.serialization.IntegerDeserializer" />
                <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
            </map>
        </constructor-arg>
    </bean>
    <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg ref="consumerProperties" />
    </bean>
    <bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
        <constructor-arg name="topics" value="test" />
        <property name="messageListener" ref="registryListener" />
    </bean>
    <bean id="kafkaMessageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
        <constructor-arg ref="consumerFactory" />
        <constructor-arg ref="containerProperties" />
    </bean>
    <context:annotation-config />
    <context:component-scan base-package="com.wj.spring.kafka" />
</beans>